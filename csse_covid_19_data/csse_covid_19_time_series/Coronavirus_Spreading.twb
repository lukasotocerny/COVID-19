<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0219.0753                               -->
<workbook original-version='18.1' source-build='2020.1.0 (20201.20.0219.0753)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-off' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='Confirmed' inline='true' name='federated.1xtym2y0zi7s521go06m41h8xmpw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='time_series_19-covid-Confirmed' name='textscan.1b514ac10w5pnm15fgt351i7wpkl'>
            <connection class='textscan' directory='/Users/lc/Documents/LUKI/PROGRAMMING/COVID-19/csse_covid_19_data/csse_covid_19_time_series' filename='time_series_19-covid-Confirmed-Processes.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1b514ac10w5pnm15fgt351i7wpkl' name='time_series_19-covid-Confirmed-Processes.csv' table='[time_series_19-covid-Confirmed-Processes#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=';'>
            <column datatype='string' name='Provice' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='real' name='Lat' ordinal='2' />
            <column datatype='real' name='Long' ordinal='3' />
            <column datatype='date' name='Date' ordinal='4' />
            <column datatype='integer' name='Confirmed' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[time_series_19-covid-Confirmed-Processes.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Provice</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Provice]</local-name>
            <parent-name>[time_series_19-covid-Confirmed-Processes.csv]</parent-name>
            <remote-alias>Provice</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[time_series_19-covid-Confirmed-Processes.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lat]</local-name>
            <parent-name>[time_series_19-covid-Confirmed-Processes.csv]</parent-name>
            <remote-alias>Lat</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Long]</local-name>
            <parent-name>[time_series_19-covid-Confirmed-Processes.csv]</parent-name>
            <remote-alias>Long</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[time_series_19-covid-Confirmed-Processes.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[time_series_19-covid-Confirmed-Processes.csv]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Actively sick' datatype='integer' name='[Calculation_3977241447766900736]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Confirmed])-SUM([federated.09f47p51bf2go81c4564w1f8wuwu].[Recovered])-SUM([federated.1oe3v721r14lwr14tqo6p102ni0y].[Deaths])' />
      </column>
      <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3977241447766900736]' derivation='User' name='[usr:Calculation_3977241447766900736:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='Country/Region, Province/State' />
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.440079' measure-ordering='alphabetic' measure-percentage='0.559921' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1xtym2y0zi7s521go06m41h8xmpw].[sum:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1xtym2y0zi7s521go06m41h8xmpw].[usr:Calculation_3977241447766900736:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.09f47p51bf2go81c4564w1f8wuwu].[sum:Recovered:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1oe3v721r14lwr14tqo6p102ni0y].[sum:Deaths:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='federated.09f47p51bf2go81c4564w1f8wuwu'>
        <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1oe3v721r14lwr14tqo6p102ni0y'>
        <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
      </datasource-dependencies>
    </datasource>
    <datasource caption='Deaths' inline='true' name='federated.1oe3v721r14lwr14tqo6p102ni0y' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='time_series_19-covid-Deaths-Processes' name='textscan.1atakh71e85xhf13i3k0l1mgupi3'>
            <connection class='textscan' directory='/Users/lc/Documents/LUKI/PROGRAMMING/COVID-19/csse_covid_19_data/csse_covid_19_time_series' filename='time_series_19-covid-Deaths-Processes.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1atakh71e85xhf13i3k0l1mgupi3' name='time_series_19-covid-Deaths-Processes.csv' table='[time_series_19-covid-Deaths-Processes#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=';'>
            <column datatype='string' name='Provice' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='real' name='Lat' ordinal='2' />
            <column datatype='real' name='Long' ordinal='3' />
            <column datatype='date' name='Date' ordinal='4' />
            <column datatype='integer' name='Deaths' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[time_series_19-covid-Deaths-Processes.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Provice</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Provice]</local-name>
            <parent-name>[time_series_19-covid-Deaths-Processes.csv]</parent-name>
            <remote-alias>Provice</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[time_series_19-covid-Deaths-Processes.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lat]</local-name>
            <parent-name>[time_series_19-covid-Deaths-Processes.csv]</parent-name>
            <remote-alias>Lat</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Long]</local-name>
            <parent-name>[time_series_19-covid-Deaths-Processes.csv]</parent-name>
            <remote-alias>Long</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[time_series_19-covid-Deaths-Processes.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[time_series_19-covid-Deaths-Processes.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.438114' measure-ordering='alphabetic' measure-percentage='0.561886' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Recovered' inline='true' name='federated.09f47p51bf2go81c4564w1f8wuwu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='time_series_19-covid-Recovered-Processes' name='textscan.1s498e51l0ca741dczozz0wmpn1x'>
            <connection class='textscan' directory='/Users/lc/Documents/LUKI/PROGRAMMING/COVID-19/csse_covid_19_data/csse_covid_19_time_series' filename='time_series_19-covid-Recovered-Processes.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1s498e51l0ca741dczozz0wmpn1x' name='time_series_19-covid-Recovered-Processes.csv' table='[time_series_19-covid-Recovered-Processes#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=';'>
            <column datatype='string' name='Provice' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='real' name='Lat' ordinal='2' />
            <column datatype='real' name='Long' ordinal='3' />
            <column datatype='date' name='Date' ordinal='4' />
            <column datatype='integer' name='Recovered' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[time_series_19-covid-Recovered-Processes.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Provice</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Provice]</local-name>
            <parent-name>[time_series_19-covid-Recovered-Processes.csv]</parent-name>
            <remote-alias>Provice</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[time_series_19-covid-Recovered-Processes.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lat]</local-name>
            <parent-name>[time_series_19-covid-Recovered-Processes.csv]</parent-name>
            <remote-alias>Lat</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Long]</local-name>
            <parent-name>[time_series_19-covid-Recovered-Processes.csv]</parent-name>
            <remote-alias>Long</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[time_series_19-covid-Recovered-Processes.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Recovered]</local-name>
            <parent-name>[time_series_19-covid-Recovered-Processes.csv]</parent-name>
            <remote-alias>Recovered</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.438114' measure-ordering='alphabetic' measure-percentage='0.561886' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Confirmed and sick' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Confirmed and sick' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Confirmed and sick'>
      <table>
        <view>
          <datasources>
            <datasource caption='Confirmed' name='federated.1xtym2y0zi7s521go06m41h8xmpw' />
            <datasource caption='Deaths' name='federated.1oe3v721r14lwr14tqo6p102ni0y' />
            <datasource caption='Recovered' name='federated.09f47p51bf2go81c4564w1f8wuwu' />
          </datasources>
          <datasource-dependencies datasource='federated.09f47p51bf2go81c4564w1f8wuwu'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Provice]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1oe3v721r14lwr14tqo6p102ni0y'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[Provice]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1xtym2y0zi7s521go06m41h8xmpw'>
            <column caption='Actively sick' datatype='integer' name='[Calculation_3977241447766900736]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Confirmed])-SUM([federated.09f47p51bf2go81c4564w1f8wuwu].[Recovered])-SUM([federated.1oe3v721r14lwr14tqo6p102ni0y].[Deaths])' />
            </column>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3977241447766900736]' derivation='User' name='[usr:Calculation_3977241447766900736:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xtym2y0zi7s521go06m41h8xmpw].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1xtym2y0zi7s521go06m41h8xmpw].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1xtym2y0zi7s521go06m41h8xmpw].[usr:Calculation_3977241447766900736:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1xtym2y0zi7s521go06m41h8xmpw].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1xtym2y0zi7s521go06m41h8xmpw].[sum:Confirmed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1xtym2y0zi7s521go06m41h8xmpw].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1xtym2y0zi7s521go06m41h8xmpw].[usr:Calculation_3977241447766900736:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1xtym2y0zi7s521go06m41h8xmpw].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1xtym2y0zi7s521go06m41h8xmpw].[sum:Confirmed:qk] + [federated.1xtym2y0zi7s521go06m41h8xmpw].[usr:Calculation_3977241447766900736:qk])</rows>
        <cols>[federated.1xtym2y0zi7s521go06m41h8xmpw].[tdy:Date:qk]</cols>
        <join-lod-include-overrides>
          <column>[federated.09f47p51bf2go81c4564w1f8wuwu].[Country]</column>
          <column>[federated.09f47p51bf2go81c4564w1f8wuwu].[Provice]</column>
          <column>[federated.1oe3v721r14lwr14tqo6p102ni0y].[Country]</column>
          <column>[federated.1oe3v721r14lwr14tqo6p102ni0y].[Provice]</column>
        </join-lod-include-overrides>
      </table>
      <simple-id uuid='{EC50EBE3-A996-4919-AB35-852C229C1B8A}' />
    </worksheet>
  </worksheets>
  <windows source-height='72'>
    <window class='worksheet' maximized='true' name='Confirmed and sick'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1xtym2y0zi7s521go06m41h8xmpw].[none:Country:nk]' type='filter' />
            <card pane-specification-id='5' param='[federated.1xtym2y0zi7s521go06m41h8xmpw].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xtym2y0zi7s521go06m41h8xmpw].[none:Country:nk]</field>
            <field>[federated.1xtym2y0zi7s521go06m41h8xmpw].[tdy:Date:ok]</field>
            <field>[federated.1xtym2y0zi7s521go06m41h8xmpw].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ABBD2580-AFD8-4ABB-B715-421C975869E2}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Confirmed and sick' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
