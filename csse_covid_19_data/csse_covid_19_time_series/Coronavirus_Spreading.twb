<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.1110.1721                               -->
<workbook original-version='18.1' source-build='2019.2.6 (20192.19.1110.1721)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Confirmed' inline='true' name='federated.1xtym2y0zi7s521go06m41h8xmpw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='time_series_19-covid-Confirmed' name='textscan.1b514ac10w5pnm15fgt351i7wpkl'>
            <connection class='textscan' directory='/Users/lc/Documents/LUKI/PROGRAMMING/COVID-19/csse_covid_19_data/csse_covid_19_time_series' filename='time_series_19-covid-Confirmed-Processes.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1b514ac10w5pnm15fgt351i7wpkl' name='time_series_19-covid-Confirmed-Processes.csv' table='[time_series_19-covid-Confirmed-Processes#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=';'>
            <column datatype='string' name='Provice' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='real' name='Lat' ordinal='2' />
            <column datatype='real' name='Long' ordinal='3' />
            <column datatype='date' name='Date' ordinal='4' />
            <column datatype='integer' name='Confirmed' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[time_series_19-covid-Confirmed-Processes.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Provice</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Provice]</local-name>
            <parent-name>[time_series_19-covid-Confirmed-Processes.csv]</parent-name>
            <remote-alias>Provice</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[time_series_19-covid-Confirmed-Processes.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lat]</local-name>
            <parent-name>[time_series_19-covid-Confirmed-Processes.csv]</parent-name>
            <remote-alias>Lat</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Long]</local-name>
            <parent-name>[time_series_19-covid-Confirmed-Processes.csv]</parent-name>
            <remote-alias>Long</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[time_series_19-covid-Confirmed-Processes.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[time_series_19-covid-Confirmed-Processes.csv]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Actively sick' datatype='integer' name='[Calculation_3977241447766900736]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Confirmed])-SUM([federated.09f47p51bf2go81c4564w1f8wuwu].[Recovered])-SUM([federated.1oe3v721r14lwr14tqo6p102ni0y].[Deaths])' />
      </column>
      <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3977241447766900736]' derivation='User' name='[usr:Calculation_3977241447766900736:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='Country/Region, Province/State' />
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.438114' measure-ordering='alphabetic' measure-percentage='0.561886' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1xtym2y0zi7s521go06m41h8xmpw].[sum:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1xtym2y0zi7s521go06m41h8xmpw].[usr:Calculation_3977241447766900736:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.09f47p51bf2go81c4564w1f8wuwu].[sum:Recovered:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1oe3v721r14lwr14tqo6p102ni0y].[sum:Deaths:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='federated.09f47p51bf2go81c4564w1f8wuwu'>
        <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1oe3v721r14lwr14tqo6p102ni0y'>
        <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
      </datasource-dependencies>
    </datasource>
    <datasource caption='Deaths' inline='true' name='federated.1oe3v721r14lwr14tqo6p102ni0y' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='time_series_19-covid-Deaths-Processes' name='textscan.1atakh71e85xhf13i3k0l1mgupi3'>
            <connection class='textscan' directory='/Users/lc/Documents/LUKI/PROGRAMMING/COVID-19/csse_covid_19_data/csse_covid_19_time_series' filename='time_series_19-covid-Deaths-Processes.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1atakh71e85xhf13i3k0l1mgupi3' name='time_series_19-covid-Deaths-Processes.csv' table='[time_series_19-covid-Deaths-Processes#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=';'>
            <column datatype='string' name='Provice' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='real' name='Lat' ordinal='2' />
            <column datatype='real' name='Long' ordinal='3' />
            <column datatype='date' name='Date' ordinal='4' />
            <column datatype='integer' name='Deaths' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[time_series_19-covid-Deaths-Processes.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Provice</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Provice]</local-name>
            <parent-name>[time_series_19-covid-Deaths-Processes.csv]</parent-name>
            <remote-alias>Provice</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[time_series_19-covid-Deaths-Processes.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lat]</local-name>
            <parent-name>[time_series_19-covid-Deaths-Processes.csv]</parent-name>
            <remote-alias>Lat</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Long]</local-name>
            <parent-name>[time_series_19-covid-Deaths-Processes.csv]</parent-name>
            <remote-alias>Long</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[time_series_19-covid-Deaths-Processes.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[time_series_19-covid-Deaths-Processes.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.440079' measure-ordering='alphabetic' measure-percentage='0.559921' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Recovered' inline='true' name='federated.09f47p51bf2go81c4564w1f8wuwu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='time_series_19-covid-Recovered-Processes' name='textscan.1s498e51l0ca741dczozz0wmpn1x'>
            <connection class='textscan' directory='/Users/lc/Documents/LUKI/PROGRAMMING/COVID-19/csse_covid_19_data/csse_covid_19_time_series' filename='time_series_19-covid-Recovered-Processes.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1s498e51l0ca741dczozz0wmpn1x' name='time_series_19-covid-Recovered-Processes.csv' table='[time_series_19-covid-Recovered-Processes#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=';'>
            <column datatype='string' name='Provice' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='real' name='Lat' ordinal='2' />
            <column datatype='real' name='Long' ordinal='3' />
            <column datatype='date' name='Date' ordinal='4' />
            <column datatype='integer' name='Recovered' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[time_series_19-covid-Recovered-Processes.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Provice</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Provice]</local-name>
            <parent-name>[time_series_19-covid-Recovered-Processes.csv]</parent-name>
            <remote-alias>Provice</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[time_series_19-covid-Recovered-Processes.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lat]</local-name>
            <parent-name>[time_series_19-covid-Recovered-Processes.csv]</parent-name>
            <remote-alias>Lat</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Long]</local-name>
            <parent-name>[time_series_19-covid-Recovered-Processes.csv]</parent-name>
            <remote-alias>Long</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[time_series_19-covid-Recovered-Processes.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Recovered]</local-name>
            <parent-name>[time_series_19-covid-Recovered-Processes.csv]</parent-name>
            <remote-alias>Recovered</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.440079' measure-ordering='alphabetic' measure-percentage='0.559921' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Confirmed and sick' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Confirmed and sick' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Confirmed and sick'>
      <table>
        <view>
          <datasources>
            <datasource caption='Confirmed' name='federated.1xtym2y0zi7s521go06m41h8xmpw' />
            <datasource caption='Deaths' name='federated.1oe3v721r14lwr14tqo6p102ni0y' />
            <datasource caption='Recovered' name='federated.09f47p51bf2go81c4564w1f8wuwu' />
          </datasources>
          <datasource-dependencies datasource='federated.09f47p51bf2go81c4564w1f8wuwu'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Provice]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1oe3v721r14lwr14tqo6p102ni0y'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[Provice]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1xtym2y0zi7s521go06m41h8xmpw'>
            <column caption='Actively sick' datatype='integer' name='[Calculation_3977241447766900736]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Confirmed])-SUM([federated.09f47p51bf2go81c4564w1f8wuwu].[Recovered])-SUM([federated.1oe3v721r14lwr14tqo6p102ni0y].[Deaths])' />
            </column>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3977241447766900736]' derivation='User' name='[usr:Calculation_3977241447766900736:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xtym2y0zi7s521go06m41h8xmpw].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mainland China&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1xtym2y0zi7s521go06m41h8xmpw].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1xtym2y0zi7s521go06m41h8xmpw].[usr:Calculation_3977241447766900736:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1xtym2y0zi7s521go06m41h8xmpw].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1xtym2y0zi7s521go06m41h8xmpw].[sum:Confirmed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1xtym2y0zi7s521go06m41h8xmpw].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1xtym2y0zi7s521go06m41h8xmpw].[usr:Calculation_3977241447766900736:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1xtym2y0zi7s521go06m41h8xmpw].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1xtym2y0zi7s521go06m41h8xmpw].[sum:Confirmed:qk] + [federated.1xtym2y0zi7s521go06m41h8xmpw].[usr:Calculation_3977241447766900736:qk])</rows>
        <cols>[federated.1xtym2y0zi7s521go06m41h8xmpw].[tdy:Date:qk]</cols>
        <join-lod-include-overrides>
          <column>[federated.09f47p51bf2go81c4564w1f8wuwu].[Country]</column>
          <column>[federated.09f47p51bf2go81c4564w1f8wuwu].[Provice]</column>
          <column>[federated.1oe3v721r14lwr14tqo6p102ni0y].[Country]</column>
          <column>[federated.1oe3v721r14lwr14tqo6p102ni0y].[Provice]</column>
        </join-lod-include-overrides>
      </table>
      <simple-id uuid='{EC50EBE3-A996-4919-AB35-852C229C1B8A}' />
    </worksheet>
  </worksheets>
  <windows source-height='72'>
    <window class='worksheet' maximized='true' name='Confirmed and sick'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1xtym2y0zi7s521go06m41h8xmpw].[none:Country:nk]' type='filter' />
            <card pane-specification-id='5' param='[federated.1xtym2y0zi7s521go06m41h8xmpw].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xtym2y0zi7s521go06m41h8xmpw].[none:Country:nk]</field>
            <field>[federated.1xtym2y0zi7s521go06m41h8xmpw].[tdy:Date:ok]</field>
            <field>[federated.1xtym2y0zi7s521go06m41h8xmpw].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ABBD2580-AFD8-4ABB-B715-421C975869E2}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Confirmed and sick' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdd3Cc953n+ffzdG6gu5EDAYIACRIgCDAHUaQsUqISZUu0FShb0tra2dlx
      uDvX1t5Ozd3N3c1M1bhmzjXjmfGsx+tZOUmmbEuyJSpYwQoUZWaCOYAkSOSMRiN1fp7f/QEQ
      Es0gkgDxAOjvqwolsIF+8G0B/Xye5xc1pZRCCCFEytGtLkAIIYQ1JACEECJFSQAIIUSKkgAQ
      QogUZb/Sg8lkknA4PNm1CCGEmETalUYBmaaJYRhW1DNuSilCoRCZmZlWlyKEEFPaFe8AdF1H
      16dn65BSCpvNhsPhsLoUIYSY0qbnWV4IIcS4SQAIIUSKkgAQQogUJQEghBApSgJACCFSlASA
      EEKkKAkAIYRIURIAQgiRoiQAhBAiRUkACCFEipIAEEKIFCUBIIQQKUoCQAghUpQEgBBCpKgp
      EQBKKeLxOPF4nE9vT5BMJi95zDTNsc+VUtN2zwIhhJgKrrgfwGRSSrFjxw6am5tRSjF37lzW
      r19PV1cX27dvx263U1FRwdq1a/noo49Yvnw5fr+f2tpadF1n2bJlVr8EIYSYliy/A4jH49TX
      1/PUU0/x1FNPcfr0aWKxGG+99RaPPPIITz/9NHV1dQwNDREKhUgkEnR0dHD06FFqamqsLl8I
      IaYty+8A7HY7fr+fQ4cOkUwmyczMxGazARAIBNB1nZKSErq7uwHo7e3l448/5qGHHsJuHyk/
      mUximiYwckeRTCaJRqPWvCAhhJgmLA8ATdNwu920trZiGAZpaWmYpommaWiaBoDD4SCRSACw
      Z88elFKX7Plrs9nGtrC8uCWk0+mc/BcjhBDTiOUBEAqFCIfDPP744wC89NJL9Pf3k0gkME0T
      m81GKBRi3rx5ADz44IMcPnyYnTt3cuedd44FxcWwUEqhadq03dNYCCEmi+VnSa/XS1dXFw0N
      DZw7d46enh7S09MpLS1lx44d1NXV0dnZSUFBwdhzNmzYQGtrK/X19RZWLoQQ05umPj3u0gJK
      Kfr7+zl06BC6rrN06VICgQBKKfbv38/g4CCrV6/G5/PR1NREfn4+LpeLaDRKY2MjFRUVlx0v
      GAySnZ1t0SsSQoipbTgSpys0bH0ATDQJACGEgHjSYGA4RlffMG09gzR3D9DVN0xTZz+hoSjR
      eNL6PgAhhBDjk0ga9A/F6AgOcbqphwsdIRraQ4SGogxF4pd9v82m4XU6JACEEGK6UEphKkXS
      MOnoHeJcax/nWoPUNffQ2j1INJ685PvtNp10j5PcDC+z8wIU5fgoyQ+Qn5lGtt8rASCEEFNZ
      JJagvXeI+tYg9W19NHSEaOzoJxxLXPa9GeluyouyKC/Ooqwwg7KCDHICXmy2K4/3kQAQQogp
      wjBMWnsGOdsSpK6phwvtIZq6+oknDMw/6q71uh0UZqUzJz/AkvkFlM/KoiA7HZv+ybD4zyIB
      IIQQFlBKEYkl6QgOca41yKmGbk40dNM3GCWe/GShS02DzHQP2QEPxbl+KmZnMzs/wOy8AF6X
      HYfddtM1SAAIIcQEU0phmop40iCRNInGkwQHIgQHI/QOhAkOREabdfroHQhjmCNX9xrgctqZ
      nedn4ZxcKktyKC3MIDfgxed1XveV/fWSABBCiOuklOJMcy8fH2uirXfo0q+Zitinrtxj8SSD
      4RiD4TjhaIKrjbd32m3MKfBTXZbLotI85hQEKMhKn/CT/ZVIAAghxHWIxBL86v0TvPpx3WXt
      8Z9F1zV8bifZAQ8+r4vMdDcFWemUF2dRWZKDP811i6q+NgkAIYT4DCcbuvkf2w/S0BFC02Dt
      omIqS3Iu+R5d13COtsfbbBouh51Mn5ssn4dMnwe7TUfXtZGPSbi6vx4SAEIIcRWxhMGbu8/w
      qw9OEIkl8ae5ePKeGu5aXjZ2sp/OJACEEOKPKKVo6R7g31+v5ci5TnRNY9n8Av7j5mWU5Aes
      Lm/CSAAIIcSnGKbJ2/vq+cW7xxiKxPE47XzlnhoeWFM+riGXU5EEgBAipSml6OobpqGjnzMt
      vRw60059Wx8AZYUZfOuLq5hfPDMXl5QAEEKklEgsQVvPIPVtfZxo6OZ8Wx8dvUOXTL7yeZ3c
      s3IuW++qxu2cuafJmfvKhBApL54w6B2I0N47yKnGHk439dDSPcDAcIykYY59n8Ouk5+Zxryi
      LCpLsllVWURh9uSMxbeSBIAQYtpTSmGYinA0QWffEHVNvZxp7qW+rY/u0DCxxCdX97qm4XLY
      mJMfoKIkh4VzcigtyCAvM21GX+1fSWq9WiHEjBGOJmjtGeB0Y8/ICpmd/bR0DxCJJS/73pyA
      l/nFI6tkLijOpiQvQIbPbUHVU4sEgBBiWojEEhw+18FHhxtp6RmkpWvgijNy0z1OygozxpZF
      nluYSWF2OsCMb9K5URIAQogpr6c/zL/+Zh9H6zvHFk7TNY3cDC8FWemUFWZSWpjBnPwAhdk+
      PE47ui4n+88iASCEmNIutPfxTy/uoaGjH7fTzudXz2N+URZzCjLI8ntIczvkyv4mSQAIIaYk
      pRRH6jv5l5f20jsQIZDu4s+fWMeislw54U8QCQAhxJT07v7z/PsbtcQTBrPz/PwfT66nKNdv
      dVkzigSAEGJKSSQNtv3+OL/96BQAKytm8e3H1uD3WrNk8kwmASCEmDIGhmP8j9cO8vHRJjRg
      89r5PHXvYrwuh9WlzUgSAEKIKaEjOMS/vLyXExe6sdt0vvbAUh5YU47dpltd2owlASCEsFxr
      zyDfeW4nLd0DeF0Ovv3YGtYsLJLO3ltMAkAIYanTTT1857md9A/HyM3w8hdPrqe8KMvqslKC
      BIAQwhJKKQ6f6+C7L+xiOJqgrDCD/7p1LbPzZs6GK1OdBIAQYtIppXjv4AWefeMQ4ViCypIc
      /uLJdWT6PFaXllIkAIQQk8o0FW/vr+fHbxwinjRYNr+A/7r1dnxep9WlpRwJACHEpDGV4he/
      P8bLO06iFKyrmc23H12DyyGnIivI/3UhxKSIJwy2vXeM3350Gk2DB9aU88zmpXLyt5Dl/+eH
      h4d5/fXXx/4dDod59NFHMQyD119/nWQyyYoVK6ipqWH37t1UV1fj8/k4deoU8XicJUuWWFi9
      EOJ6RONJ/u2VA+w43ICmwRN3VfPYhipsMsbfUpb/3/d6vWzZsoUtW7awceNGlFJ4vV7eeust
      NmzYwNatW9m3bx+RSITOzk7i8TjBYJBdu3ZRUVFhdflCiM8QiSX455f2suNIA3a7zp9sXsZj
      G+XkPxVYfgegaRou18gaH4cPH+a2225DKUUsFmPWrFnous6cOXPo7OwEIBqN8v7773Pvvffi
      do/s6GMYBqb5yf6ehmEQj8cn/8UIIS4RSxj891cOsvtEC067zp9sXsJdy8swkkmMz366uMUs
      D4CLwuEwLS0t3HXXXSil0HV9bBagy+UaO6Fv374dl8tFcXHx2HM1TUPXR64mlFKX/FsIYY1E
      0uRffrOffafacNh1/uyhlWxYWmJ1WeJTpkwA7N69m1WrVmG32zEMg2QyiWma2Gw2BgcHKSsr
      A+Dxxx9n165d7N+/n9WrVwNccrK/GB52+5R5aUKknGg8yT+/vG/s5P+/fHE1G5aVWl2W+CNT
      4jI5Ho9TX19PZWUlMHJCz8/Pp7a2ltbWVlpbWykoKBj7/vvuu4+TJ0/S0tJiVclCiKu42Oa/
      +0TLyMn/S6u5c+kcq8sSV6ApdYVdlSdZT08PoVCI8vLyscfi8Tg7duwgEomwevVqCgoKqKur
      o6SkBI/HQygUoqGhgaVLl15yLKUUwWCQ7OzsyX4ZQqS8SCzB91/exx+ON+Ow63zri6vZsHSO
      LOo2RU2JAJhIEgBCWCMWT/JPL+1l1/FmnHYbX394BXevmGt1WeIapKFcCDFuiaTB917cM9Ls
      Y9P5+sMruXtFmdVlic8gASCEGJdoPMk/XTz5j3b4Spv/9CABIIS4aRfb/P/45C9t/tPDlBgF
      JISYfiKxBN//zScdvt/cskpO/tOM3AEIIW5YLJHkey/uYe/JVpx2G3/28AruWi5t/tONBIAQ
      4obEEwZ/94s/UHumHY/Lzp89tIKNy+TkPx1JAAghrtvAcIx//PVuDp3twOty8M0vrmJ9zWyr
      yxI3SQJACHFdQkNR/r9tf+BEQzfpHiffeHgl62pmS5v/NCYBIIT4TMGBCN/95S5Ojp78//et
      a1k6v0BO/tOcBIAQ4pqShslPfneYkw3d+DxO/svja1m2oNDqssQEkAAQQlzT6aYedh5pxOOy
      8xdPrqd6bp7VJYkJIvMAhBBXpZRi9/FmFFBdlseislyrSxITSAJACHFV8YTBgbp2AOnwnYEk
      AIQQV9XQEaIjOITHZWdpubT7zzQSAEKIq9p7qhWARaW5BNJcFlcjJpoEgBDiiuIJg8NnOwC4
      vXo2ui7NPzONBIAQ4oraewdp7OzHpmtUl8nIn5lIAkAIcUX7TrWSNEzKi7PIzUyzuhxxC0gA
      CCEukzRM9pwcaf9fW1WMLqN/ZiQJACHEZVq6B2jq7Mdu01m1sMjqcsQtIgEghLjMh4caiCcN
      Fs/LpzjXb3U54haRABBCXCKWSLLzaBMAG2Rv3xlNAkAIcYm6pl6CAxH8Xhc1c/OtLkfcQhIA
      QohL7D3ZgqkUC+fkkOX3WF2OuIUkAIQQY4xPjf65bVGxxdWIW00CQAgx5nRTLz39YdI9TpaW
      F1hdjrjFJACEEMDI0s97T7UAsHBODpk+t8UViVtNAkAIAYwu/Xy6DYC1i2Tp51QgASCEAKC1
      Z5DWnkHcTjvL5kvzTyqQABBCACNr/wCUF2XJ0s8pQgJACEEiaXCgbqT5Z/XCImw2OTWkginz
      W45Go/T09BCPx8ceC4fDhEIhTNMEIJFIoJQCwDTNS75XCHHz2noGaWgPoWlwW5Ws/ZMq7FYX
      ANDU1MR7771HTk4ONpuNzZs309jYyO9//3vS09PJyspi06ZNvP/++6xZs4ZAIMDOnTvJyMhg
      yZIlVpcvxLS373QbCcNkfnEWebL0c8qwPAAMw+C9995j69ateL1eYGQ42gcffMDjjz9OWloa
      27ZtY2BggEgkgmEYNDY20trayvr16y2uXojpzzBN9pwYGf55e7WM/kkllgdAIpEgHo+zd+9e
      wuEwy5YtIy8vD5vNRlpaGrquU1xcTG9vLzByt7B//36eeOIJbDbb2DEuNhMppUgkEkQiEcte
      kxDTSUv3IM1d/ThsOovLsuW9k0IsDwDTNBkeHqa8vBxd13n11Vf58pe/DDB2JaLrOoZhAFBf
      X4+mabjdn0xSsdsvfRkOh+OSrwshru5CZxuxhMG8WZnMK861uhwxiSwPALvdTkZGBsXFxWia
      RklJCcPDwyQSCZLJJA6Hg97eXioqKgDYuHEj9fX1vPvuu2zevBlN0y65Zb3YSSy3sUJcn7Mt
      QQCqy/LkfZNiLB8F5HA4KC4u5u233+bo0aN0dXWRm5tLVVUVb7zxBnv27GFoaIjc3NyxP86V
      K1eSSCQ4cuSIxdULMf219Q4CkJPhtbgSMdk0dfGS2UJKKerq6hgYGGDhwoX4fD6UUpw5c4bh
      4WEWLlyIx+Ohp6eHQCCAw+EgHo/T3d1NUVHRZccKBoNkZ2db9GqEmD6UUvzpd1+jOxTmL5++
      Q7Z/TDGWNwHBSHNNZWXlZY9dbPa5KCcnZ+xzp9N52clfCHFjhiJxhsJx7DadnAwZ/plqLG8C
      EkJYpzsUJmGYeN0OWf0zBU2JOwAhhDW6QsMkDROfx4nP45y0n6uUwlAKwzQxlEnSNDFME1Mp
      bJqOTdex6Rp2Tceu6+i6XKveChIAQqSw3v4wANkB74Sv/3PxJD8Ui9HcH+J8sJdQNEI0mSCa
      SJBUJkljNAAMk4RpjASAruPQR0LArttw6DoOmw2HzYbP6WJJYREVuXnYJRTGTQJAiBSllKK9
      dwiAvAlq/1dKETOSnA/20tAX5GxPN13DQyRHJ2pezacHnxqmSRy42uiUIx1tVOUV8MVFNfhd
      0mw1HhIAQqSw9tEhoEW5vps+RjSZoLW/n/pgD+d6e2juD2F+anChBmR70yjJyKQg3YfTZiPN
      6cI5elXvtttx2+0jV/m6jYRpEksmiBsG0WSCSCJJwjCIG0naBgfY39LEya4OGvp6eaxmKQtz
      82X+wk2SABAihbX2jARAQVb6dT/HVCZdQ0M09Yeo6+6kPthLNJFEjV6z65pGlsdLUSDAguxc
      yrKyyXB7sOv6DZyor3xlr5SipqCQ7SeP0zU8xHOHDrCyqIT7F1SS5py8PoyZQgJAiBSVNEy6
      QyN9AIXZ1w6AhGHQGApyvLODxr4g3cNDJEabdTQgzelklj9ARU4e87JyyPR4cDscE16zpmnM
      z87l62vW8daZUxxsbWZfSyMNfb08tLCa+TmylMWNkAAQIkUFB6MkR4eA+tOu3pYeSybZfuo4
      B1qbxx6z6zqzfAFKMzOpyiug0Ocn3TV5u4ilOZ18adFi5ufk8uro3cDPDu3nc6VzuWvufOyj
      C0WKa5MAECJFdfUNAxBIc+F1Xf1UUNvWwoHWZpw2Gwty8qjMzaMkI5O8tHRL2941TWNxwSxK
      Ahm8cvI4p7o7ea/+LOeDvTxes4wsryxt8VlkHJUQKaq1ewCAnIAXt/PKARA3knzccB6AO8vK
      eWrpClYVl5Cf7psyHa8ZHi//YfkqHq1egstu50JfkH/ds5MzPV1WlzblSQAIkaI6giNDQLP9
      3quezE91ddETHsZtt7OiqHjKnPT/mK5prCyazTdW305Buo/heJznDh1gT1PD2F4h4nISAEKk
      oE/PAZiVc+UO4KRpsqe5AYAVRbPJcHsmq7ybomkahf4A/2nVbVTk5BE3DF49dZzX6k6SGN1P
      RFxKAkCIFGQYiu7QSB9A/lWGgJ4P9nAh2ItN01g3p2zKXv3/MZ/LzVPLVnJH6VyUgl2NF/j5
      of0MxqJWlzblSAAIkYLiSYOegZEhoMW5/su+birFxw0XUEB1QSFZnunVoeq02XiwooovVS/G
      ruuc6enm3/buomNwwOrSphQJACFS0FAkTv9QDJtNI/cKG8G09IeoD/agaxp3lM6bNlf/n6Zp
      GquKZvOfV63F73LTGx7m3/b+gaMdbVaXNmXIMFAhUlDvwMjG7xlpblyOy08DuxovkDRNyrNz
      KPYHJru8CaNpGiUZmXx9ze386ughGkN9/PJILe/VnyXD7SbD7SHN6STD7cHnchNwu3Hb7QTc
      HmwpsNicBIAQKahtdAmILL8H+x+tAtobHuZkdye6pvG5aXr1/2mappHtTeOZFWt4/fQJjnW0
      0zE4cNXmIJfNTmVuHpsrqsjwTO2O7/GSABAiBXX2jYwAys9MvywAdjc1EEsmmR3IoDw750pP
      n5Y8DgePVi/hjtK5dAwNEopEGIxFGYhF6Y9GGYzFGIzHSJgGRzraiCQTPLNiDfo0D8BrkQAQ
      IgW1jE4C++M1gIbjcfY2N6IBd5TOnXHNIJqmUeDzU+C7vOMbRoa+ng/28PPaA5zp6ea9c2fY
      VL5g2t8FXc3M+u0KIT6TYZp0BkeGgH46AJRS7GlqIG4Y5KSlU5GbZ1WJlrHrOvOzc7lvwcge
      5e/Vn+FMT7fFVd06EgBCpJhoPMlAOAZcuhFMLJlkf2sTALeXlOK2T/xqntOBpmmsLZnD4oJZ
      KODlE0foHh6yuqxbQgJAiBQTiSYZHA2Aok/NATja2UZfJILf5WbprCKrypsS7LqNL1bVkJuW
      Tn80ym9OHCWWTFpd1oSTABAixfQNRYjEknhcdjLSR5aBjieTfNxwAYA1s+fgdcjmKl6nkycW
      L8Nlt3M+2MvbZ0+j1NU2qpyeJACESDEX1wDKCXjR9ZHOzZPdnXQODeKy21k9u8TK8qaU4kAG
      D1ZUoTEyOupYZ7vVJU0oCQAhUszFACjKGWn+SRoGe5saAVhaWITPOXkbu0wHq4pLWFVcgqkU
      vzl+lK6hQatLmjASAEKkmK7RReDyMkc6gFsG+mkMBXHYbNxROnfGDnm8WbqmsbmiiuJABpFk
      ghePH5kx/QESAEKkmNY/mgNwpqcLQykW5OSSm3b9m8OnEo/DwSOLFuN1OGgK9fFm3UmMGbDP
      gEwEEyKFxBMGPf1hNA2KcnwAdAyONGkU+zOsLG3Km+UPsKWqhm1HatnX0kT74ABlmdnMycik
      KBDA53KjwbS6g5IAECKFDEZiRGJJ7DadLP/IOjddo2Pcs71p13qqABYXzKJ7eIgPz9fTGOqj
      MdQHgIZGpsdDWVYWRf4AJRlZFPn96NrUbmSRABAihfQNRInEEriddrL8HqLJBAOxKLqmkZMm
      AfBZNE1jU3kFC3PzORfspW0gRMtAP8FwmGAkTLA1zMHWFnRNY25WNl+oXHTVZSemAgkAIVJI
      70AYw1QE0lykuZ10DA6QNE3cdruM/rkBRYEMigIZKKVIGAaD8Rgt/SEaQ300hfroHh7iXG8P
      zx7YwyPVS6jMzbe65CuaEgFgmubYxs2apmGz2QBIJpOYponD4UDTNEzTRNM0NE1DKYVpmmPf
      K4T4bBeHgBZkj7T/90UiGKaJd3RdfHFjNE3DabeTbbeT7U1jSWERSim6h4d57tB+uoaH2Ha4
      lgcqFrJm9pwpt7LolAiAnTt30tTUhM1mIxAI8OCDD9LV1cX27dux2+1UVlZy22238dFHH7F8
      +XL8fj+1tbXous6yZcusLl+IaaM9OBIAF0cAXRzTnioboEwGTdPIS0/n62vW8cujtZzp6ebV
      k8foDQ+PTCqbQiFgeQAopWhoaODJJ58cu5pXSvHWW2/xyCOP4Pf7ee6556iuriYUCpFIJOjo
      6ODo0aM8/fTTFlcvxPTSProRTF5G2uiV6ugdgc9nZVkzUprTydeWr+bNulPsarrAzobzdA0N
      8fjipaRPkeY2ywPANE3C4TAnT57E7/dTVFQ0lpCBQABd1ykpKaG7e2RJ1t7eXj7++GMeeugh
      7PaR8i82FcFIeCSTSaLRqDUvSIgprL13JABy/C5isdhYAGQ4XfKeuUU2lc7F73Dw7vmz1PV0
      8ez+PTxSVUOO5/K9mCeb5QGgaRp33XUXw8PDnDx5kj/84Q889thjY239AA6Hg0QiAcDu3btR
      SpGZmTl2DJvNhj56+6qUwmaz4ZT2TCEuEY4m6B+OYdM1CnMCOBwOusOj+wIEAvKeuYXWl80j
      zx/g5eNHaBsc4CeH9rO1Zinl2bmW1jUlAmDBggVjHbvbtm0jEomQSCTGOnlDoRDz5s0D4POf
      /zyHDx9m586d3HnnnWNBcTEslFJomjYWCEKIEb0DEQxT4XU7yPR5iJsmw/E4dl0ny5sm75lb
      bGFePv9p1W384shBuoaGeP5wLV9esozK3HzL+gUs/43H43Feeuklzp8/z/HjxwmHw6Snp1Na
      WsqOHTuoq6ujs7OTgoKCseds2LCB1tZW6uvrLaxciOmlKxQmaZj4vC58XudY80+aw4knRTd/
      mWwFPj9/umotFTl5xIwkvzh80NIdxywPAKfTyR133EFjYyOhUIivfOUr2Gw2Nm7cSHp6Oi0t
      LWzduhVd11m+fDnp6enYbDYeeeQRkjNkQSYhJkP36CJwWT4PDrttbAawz+XG7bC8MSBl+F1u
      nlq2goV5+SRMkxeO1NLYF7SkFst/65qmUVBQcMkV/sXHV69efcljJSWfrFPudruprKyclBqF
      mAkuzgHIzxqZ8ds7PBII2WneKb9kwUzjtNl5vGYpPz24j8ZQHz8/dICnl62kNDNrUuuQ37oQ
      KUApRUdwZARQYbYPpRSdwyP/lhVAreF1OHl62UoKfX6G4jG2HTlIa39oUmuQABAiBSgFHb0j
      V/wFmWkYShEMhwFZBM5KPpebZ1asptDnpz8a5fnDB8d+L5NBAkCIFJA0TDr7RncCy/WTNAz6
      R8f9F6TLJDArBdwenl62kkyPl2AkzI8P7qU/GpmUny0BIEQKGBiOEUsYeJwjG8EPJ+KEEyND
      QDOnwISkVJftTeNry1fhd7npHh7ixwcmJwRuqhO4traWH/7wh8TjcQzDwOMZWVd8cHCQH/zg
      B5dM0hJCWK9j9Oo/I92Nx2WnaWBkHfsMtwe7jP+fEgp8fr62YjU/ObiXjqFBth2p5avLVuG9
      hRP0bioAampq+Id/+Adee+01cnNzue2221BK8f3vfx+l1ETXKIQYp4sjgDL9HlxOO52ji8Bl
      eb0SAFNIkT/A00tX8pOD+2joC/LLo4f48pLleBy3Zp7GTf3mHQ4HPp8Pj8dDe3s7Xq8Xr9dL
      OByms7NzomsUQoxT5+gqoDkBL7qmEYyMdDRmerxTanVKAXMys9i6eBkuu526ni5+fmg/0dGl
      cCbauKL/nnvu4fTp03zta1/jmWeewe12U15ePlG1CSEmSMunNoJXSo0tA50vHcBT0sK8fL6y
      ZDlOm43zwV5+WruP4Xh8wn/OuCaCpaen8zd/8zd0d3eTlpaG3W4fW6FTCDE1JA2T7tDIFX9h
      to+E+ckIoFzZBnLKqsjJ4+llK3n+0EEu9AV59sAevrp8FQG3Z8J+xrjuAHp6evirv/or/uIv
      /oLGxkb+8R//kUhkcoYvCSGuTyxhEBwYCYBZOT4iiQRD8RggcwCmMk3TmJ+dyzMrVpPudNI6
      0M/Pa/fTF5m4eQLjCoBXXnmF+++/n0cffRTTNElPT6e9vX2iahNCTIBINEFoKIaua+RnpjEQ
      jRJNJnHabGRM4NWkmHiaplGamcVTy1aS7nTSMtDPTw/um7AQGFcA+Hw+enp6ME2TSCTCqVOn
      SE+XaeVCTCW9gxFMpfB7XXicdnpG9wDI8nhlG8hpQNM0yjKz+ery1aQ7XXQMDfLjA3sZmIAN
      fMb129+yZQvNzc389re/5Yc//CGbN28mLy9v3EUJISbOxW0gs/0ebDad3tEAkDWAppeSjEz+
      48o1+FwuuoaH+NH+3YTG2eQ+rh5bp9PJU089xSOPPIKmadjt9rFNXIQQU8Mnq3kR+cwAACAA
      SURBVICmY9M1OodG/p0rd+vTTpE/wDPLV/PT2n10Dw/x09p9fHX5qpuezT2uAPjwww959tln
      CQQCY4/97d/+LRkZGeM5rBBiArWN7gNckDVywu8Z3QcgRzqAp6WiQAZfW7GGHx/YS/vgAC8c
      qeWZFWtuarLYuAKgqamJZ555hrvvvns8hxFCTCClFKapiCUMQkNRmrv6AZiVnU7MSDIYj6Gh
      yQigaazIH+CZFav58cG9NIb6ONrRxprZc274OOMKgPXr1/Pcc89dsjPXnXfeidvtHs9hhRA3
      qH8oSmNnPw0dIdp7Bznf1kdL9yBDkZHJQzZdoyjXz0A0RjSZxGHTyZJF4Ka14kAGjyxawrYj
      B3nj9EmyvWmUZ+fc0DHGFQC7d+9meHiYtra2sccMwxjPIYUQN+BkQze//uAEh852XPHrLoeN
      wmwfD61bwMI5OZzr7SFhGGS4PaS7bt0iY2JyVOXls7liIa+dPsm2wwf5+prbybuB2d3jCgC/
      38/dd9/N/fffP57DCCFuwpFzHXz3l7sYDMdxOmxkprvJz0qnJM9PaUEGRbl+ivP8eJx27DYd
      TdPGNoLP8HhkG8gZQNM01paUcbyzg/PBXrYdqeVPVt6Gz+W6ruePKwACgQD//u//zscffzz2
      2J//+Z/j9/vHc1ghxDUopThQ18a/vLSPwXCcipJsvv3IGjJ9Hjwu+zUXd7u4CmieDAGdMXRN
      40uLFvM/9u2ifXCAXx2t5ellq3Bdx7I84wqAmpoa/vIv//KS9X+8XmlXFOJWUUqx63gz//bq
      gZGT/+xs/s+n7iAj/fr63S6uAipzAGaW3LR0nlyygh8f3MvZ3h5ePXWcRxYt/syJfuO6B9yz
      Zw+7d++mvLx87EMWgxPi1lBKseNII997cQ+D4ThVpbn8P1+787pP/vDJHUCOLAI345RmZvHF
      qhp0TeNgazPv1Z/5zOeMKwBuv/12Lly4QG1tLcPDwwwPD2Oa5ngOKYS4AqUU7x28wL+8tJdE
      0mTtomL+36/eSbrn+jtyh+IxwvEENk2TEUAzkKZpLJtVzKbyBWjA++fPsa+l6ZqbdI3rcv3Y
      sWO0tLTwz//8z7hGOx3+/u//XraEFGICKaV498B5fvTaQQxTcefSOXzj4VW4XTf29g1FIhjK
      xOtwXncnoZheNE1jY1k5oUiEfS1NvH7qBIXpPmZnXPmcPK4AWLduHWvXrr3kMVkGQoiJo5Ti
      zT1n+cmbh0kYJncsLuFbX1yFy3Hjb93e8DCmUqQ5nXgcMgR0ptJ1nc9XLiIUjXCmp5sXjx/h
      G2vWXXGm8E0FQE9PD6+99hpLly7l7bffvuRr3/rWt/D5ZJchIcZLKcVb+87xP984hFKKjctK
      +caWlTd18gfoDY90AOd409BlG8gZzWW388Wqxfzr7p10Dg3yXv0ZHqyoumyE2E39JaWlpbFy
      5UoKCgq45557Lv3BcmspxITYe7KVH71Wi1KK+1eX88zmpTd98ldKjXUAyzaQqSHL62VzxUJe
      PH6E3U0NVOTkMT8n95Lvuam/pgMHDqDrOl1dXfh8PlavXj0hBQshRpxtCfIvL+/FHG3z/5MH
      l+Gwj695NTi6DHSmRzaBSRUrimZzvLODU92dbD91nG+sWYfX+Unz300FgN/v52c/+xnp6em4
      3W6am5vHvrZ582Y88gcmxE3r7Bvin17czXA0QcXsbP7sCyvGffI3lRrbCOZGlgoQ05umaWyp
      qqFlT4iu4SHePVfHw1U1Y1+/qWGgNTU1PP744xiGgWmaJBKJsY9rDTkSQlxbOJrgX1/eR0v3
      IHmZafzXJ24n7QaGel71uIk44UQCh26TO4AUk+HxsLmiCg3Y29zImZ6usa/d1B2Aruvcdttt
      zJ8/H03TLln6QUYBCXFzkobJj988xNHzXXicdv7LY7eRnzkxE7a6RjeBSXc5cdlksmaqWVpY
      xKmuTo52tPHKyWP8b7d/DrfdMb5hoK2trXzve98DGOtd/od/+AeZByDEDVJK8crO0/z+4Hkc
      Np1vbFlJVWnuZz/xOl3sAA64PThltn7K0TWNz1dW0dAXpDcc5q0zp3loYfX4AmDfvn1s3bqV
      DRs2jD12s6OA4vE4L7zwAmvWrKGyspL+/n5ee+01kskkK1asoKamht27d1NdXY3P5+PUqVMk
      EgkWL148npcghOWUUuw71crz7x4FBV+6cyGfW3Ljm3tcy8UhoNkyBDRlBdweHlpYzS8OH2Bv
      cyOVOXnjWwpiyZIltLS0EA6Hxz5utg9gx44deDweBgcHUUrxu9/9jg0bNrB161b27dtHJBKh
      s7OTeDxOMBhk165dLFiwYDzlCzElnGsN8v3f7EMp2Li8lEfvvHy89ngopcaWgc6VNYBS2qL8
      ApYWFmEqxaunjo/vDiAajfLxxx9TW1s79th3vvOdG94TuL29nVAoRGVlJbFYDMMwiMVizJo1
      C13XmTNnDp2dnWM/8/333+fee+8d23nsYmf0RYZhEI/Hx/PShJgUvQMRvvfrkcXd5s3K4Ol7
      qkEZxOMTt7FS0jQIja4CmuVyy3sjxd07dz7ngz0EI+HxBcAdd9zB+vXricfj6LqO3X7ttciv
      JJlM8tZbb/HYY49x4cIFYOSKRdf1sWO5XK6xP9rt27fjcrkoLi4eO4amaeijy54qpS75txBT
      VTxh8KPXD9HaM0huhpf/9sTt+NMmfjvVpGHQH4sCkJvuk/dGivN7PHyhspptR2vHFwADAwP8
      3d/9HS0tLRiGwaZNm/jqV796Q39g9fX1DAwM8NZbb9HT00MymSQ3N5dkMolpmthsNgYHBykr
      KwPg8ccfZ9euXezfv39sAtqnf97F8JBlqcVU98v3T1J7pgO3085/e+J2CnNuzUZKkWiEaDKJ
      XdfJTkuX94agpnAWy3u6xhcAr7zyCqtWreKv//qvMQyDv/mbv6G+vp758+df9zHmz5/P3Llz
      AThx4gTRaJSSkhLy8/M5dOgQhYWFtLa2cu+9944957777mPbtm3MmjXrkjsBIaaLo/WdvPLx
      aXRN45kHllJRcmObed+Ii+3/Od60z9wgRKSOz1dWja8T2DAMHA4HNpsNm82Gw+G44f0AdF3H
      4XDgcDiYNWsWJSUl6LrOpk2b6Ovr48CBA3zhC1/AbrezcOFCvF4vTqeTLVu20NPTM57yhbDE
      wHCM//7b/SSSJmuqiti0cu4t/XkXAyDL68UmI4DEKI/DOb47gIcffpjvfOc7vP3228TjcWpq
      aigvL7/p4+Xl5Y197nQ6L1torqKiYuzzjIwMli5detM/SwgrGKbJ8+8cpSM4RE7AyzObl2K3
      je+q3BwdeafBFfvgeoYvrgHkndDRRWL6G1cAZGVl8fd///d0dXXhdDrJzs6eqLqEmJH2nmzl
      9wfPo2sa/+nzy8nPvPm9eZVSXOgLsre5kVAkgt2mY9N0nDYbdl3HYbPhtNk429sNyCqg4nI3
      FQDxeJxvfvOb/OAHP8DpdFJYWIhpmnzjG9/gO9/5jswEFuIKOoNDY7t63b+mnDVVRTd9rI7B
      Ad6sO0Xdp9Z1uRZd0yjyB27654mZ6aYCYHh4GJfLdcloAk3TyM/Pp7u7WwJAiD+SNEx+9Fot
      fYNRZmX7+Op9S25qRm5/NMJHF+rZ39JMzEji0HVWFM1mdkYmCcMgaZqj/zWIGyMfhmmyICeP
      4sCNzc8RM99NBUB6ejqRSIR9+/axbNkyNE3j7NmznD17llmzZk10jUJMe2/vq+fgmTacDhvf
      /OIqvO7Lt+e7lmgywdGOdn5/ro7+aBRd05ibmc19CyqZk5EpbfvipmjqJtduOHfuHN/97neJ
      RqNomoamaXz7299myZIllv4xKqUIBoPSHyGmjJauAf78h+8yHE3wpc8t5Kv3L7nu55pKUd/b
      w5tnTtE20A9AhtvD/QsqWVwwS4Z1inG56QCAkZNtKBTCNE2ysrKmxFWIBICYShJJg7/6yQ6O
      X+hiQXEWf/0nG/G6ru/qP5ZM8mbdSfa1NGEqhV3Xube8gtWz51xxg28hbtS4RgFpmibt/UJc
      hVKK33x0iuMXukj3OPnWl1Zf98m/Z3iIXx87TGOoD5ums3xWEZvKF5AlQznFBJI54ULcIica
      unl5xyk0DZ64u5o5+Z89CkcpRX2wl5ePHyEYCeOxO/hS9WKq8wtlGWcx4SQAhLgFukPD/PDV
      A8QSBssXFHLf6nmfeeVumCYHWpt5s+4k0WSSHG8aTy5dQaHPL1f94paQABBigiUNkx9tP0hz
      1wBZPg/feHglzs/Y1D1hGLx15hR/aLyAAhbk5PJo9RICbtm/V9w6EgBCTLBXdp5mf10bLqeN
      //WR1eR9xr6+g7Eovzp6mLO93WjA7SWlbK6owiH7a4tbTAJAiAmilOJAXTvbfn8MpWDrxkUs
      m19wzee09If45dFDdA8P4bTZeLByEauLS6S9X0wKCQAhJkhncJh//c0+DFNxx+ISHlpXcc22
      +4a+IC8cqSUUjRBwu3li8XLKMqfGcGqRGiQAhJgA4WiC7/9mL6GhKHPyA/zp55fjuEq7v1KK
      9sEBnj98gMFYjOJABl9Zspxsr+zXKyaXBIAQ42SYJr949yjHL3Tjcdn59mO3EUi/+taOfdEI
      Pz+0n8FYjPx0H08vXUmGRzp7xeSTeeRCjNMHtQ28ueccmgZff3gl82ZdfXLkQDTKc7X76YtE
      yPam8bXlq+TkLywjASDEOJxt6eUnvzuMqUaWeL5zyZyrfm84Hue5wwdoGxwgzenk6WUryZJm
      H2EhCQAhbtJgOMY/vbiXoUicmrl5/Id7r74QYjSZ4NfHDtMU6sPrcPLV5asokA1ahMWkD0CI
      m2CYJv/z9UO0dA+QE/DwzS1XX+I5YRj89sRRTnV34rTZeLR6CXMysia5YiEuJ3cAQtwgpRS7
      T7Tw4eEGdF3jzx5ayaycK1/Nm0rxztnTHG5vw6bpPFxVw6L8a88NEGKySAAIcYMGw3F+8e4x
      AB68bT6rKq+8CZKpFL8/V8dHDefRgAcrq1hZNHsSKxXi2iQAhLgBplJs/0MdbT2DZKa7eeLu
      6iu2+yul2N3UwPv1Z9GAe8orWFtSOun1CnEt0gcgxA1o7Ajx5p6zaBp85Z4a0q7Q7m+aJh81
      nOfts6cBWDenjA1zy2V5BzHlSAAIcZ2Shsm2d48xHE2wcE4OG5eVXnb1byrFu+fO8MH5cwCs
      LJrN/QsWytaNYkqSABDiOu071cqBunacdhtfvX/JZUs9mErx9pnTfHjhHBpwR+k87l9QKSd/
      MWVJAAhxHcLRBD8dnfB194oyKktyLvl6wjB491wdOy7UowGbyiu4a958afYRU5oEgBCfQSnF
      b3aeorNvmCy/h8c3Lrqk6Sc+upnLrsYLYyf/jdLmL6YBCQAhPkNb7yBv7j4LjKzxn+X/ZO2e
      WDLJKyePcaitBdC4Z/4CNs6VK38xPUgACHENhmny3NtHGY4mWDA7m7tXlI19LWEY/PrYYY53
      tmPXde5fsJA7SudaWK0QN0YCQIhrOFjXzt5Trei6xjMPLB3r+E2aBr89eXTs5P/FqhpWFpdY
      XK0QN0YCQIirCEcTPP/OUUxTsWnlXBbOGen4VUqxs+E8B1tbsOs6j1UvYUlhkcXVCnHjZHya
      EFexfVcdjZ39ZKS7+fJdn8z4bQgFeW90hu8DCxaypLBItnEU09KUCADTNAmHw0QiEZRSY4/H
      43HC4fDYY4ZhjH2ulCKZTFpSr5j52noG2f6HOjTgkTsXkpPhBWAoFuPVk8dJGAYLcvJYW3L5
      ZDAhpgvLm4CSySQvv/wyAIlEgvz8fDZt2kRHRwdvvPEGLpeL0tJS1q9fz4cffsjKlSvx+/3s
      3bsXt9vN0qVLLX4FYqYxTcVPf3eY4UiC+cVZ3LtqHjDSIfz66RO0Dw7gd7n40qLFMslLTGuW
      B4DNZuPhhx/G7XajlOLZZ58lkUjwzjvv8Oijj+Lz+Xj++edZunQpg4ODJJNJ2traqKur46mn
      nrK6fDEDfXi4gb2nWnHabfzHzctwO0feJofbWznc3opN09lStVi2chTTnuUBoGkauq7T1NTE
      mTNnKCwsRNd1dF3H7/ej6zolJSV0d3cD0NnZya5du3jkkUew2UZHZCSTGIYxdsxEIkE0GrXk
      9YjprSsU5qe/OwzAfavKKMtPJxqN0hsJs/3UcRSwonAWc/0B+RsT057lAQAwPDzMkSNHaG9v
      p7q6eqyd/2Lbqs1mGzvBHzp0CACf75MNOGw2G/qnbsUdDgdOp3OyyhczRNIwef7dE/QPxygt
      yOCJTTW4XA7ihsGrdSeJJpMUBzJ4oHIRLvuUeOsIMS5T4q84MzOTL3zhCxiGwS9/+UsqKipI
      JBIYhoHdbqevr4/58+cDcP/993PixAk+/PBD7r77bjRNG/sAxsJDl7ZZcYM+qm1g/+k2HHad
      P/3CctI9LpRSfNRwnsZQHy6bnS9W1eCViwsxQ1h+luzv7+f111/n/PnznD17lqGhIbxeL/Pm
      zeO9997j2LFj9Pb2kp+fP3aSX7duHb29vdTV1VlcvZgpOoJDPP/uUUyleGDNfKrL8gA419vD
      jgsjSzvft6CSIn/AyjKFmFCWB4Df76e6uprm5maCwSBPPPEEHo+Hz33uc+Tn5xMKhdi6dSu6
      rrNq1Sp8Ph82m40tW7bgcFx5E24hboRhmjz7xiH6BqPMyQ/wxN2LABiMRXnl5DGSpklFTh63
      y5BPMcNo6tMD72cApRTBYJDs7GyrSxHTgFKKdw+c599eOYDTofN/Pf05Fs/Lx1SKF44c5GhH
      O9leL99cs550l8vqcoWYUJbfAQhhpa6+4bF1/u9fXU713DyUUuxvaeJYx8g6Pw8trJaTv5iR
      JABEykokDX70Wi3D0QSlBRk8umERGtDSH+K10ydQwPo5c6nIybO6VCFuCQkAkZKUUnx4qIED
      dW3YdI3//IXl+LxOhuNxth2tJWEYzMvK4e7y+dLuL2YsCQCRktp7h/jZW0cAeGhdBVWluSQM
      g9+cOEowHMbncrF18VKctikxUlqIW0ICQKQcwzT5yZuHGIzEKS3MYOtdI6N+dlw4x4muDuy6
      zleWLMfvcltcqRC3lgSASDn7T7dx8Ew7LoeN//z55XhcDk53d/Hh+XNowD3lFczNypGmHzHj
      SQCIlBJPGmx79xiGqVhXM5tFZXl0Dw/x25NHSZgmVXkFrJtT9tkHEmIGkAAQKeXDQw00dvbj
      8zp5dMMikubIvr790SgFPj9fql6MY3SRQSFmOgkAkTIGwjF+9f4JAB5eX0lhdjq/O3OaplAf
      HoeDx2uWku6U8f4idUgAiJSglOKlD0/S0x+mMDud+1fP41BbC39oOI8GPFhRxSyf3+oyhZhU
      EgAiJbR2D/LO/noAtm5cxEAiMjbZ67bZpawomi2dviLlSACIGc8wTX71wXEisSSVJdmsrJrF
      b08eI5JIMDuQwebKKnQ5+YsUJAEgZrxTDT3sOt6CpsGXN9Wwr6WR5v4QHruDJxYvwymdviJF
      SQCIGc0wTF547xhJw2RVZREF+V4+OD+yvv+98yvISUu3uEIhrCMBIGa0j481cbKxB6/LwVP3
      1vBm3SkSpkFpZharikusLk8IS0kAiBkrGk/y/DvHME3FppVzCRpD1PV04dB1Ni9YKOP9RcqT
      ABAzklKK13edoSs0TE7Ay6bVpbx9dmQL0bUlZZRkZFpcoRDWkwAQM1LvQIRXPj4NwJY7KjjY
      1UxfJEyG28PGueUy5FMIJADEDKSU4sUPTjAYjjM7z8+8uRnUtjajAZ+vrMIje0kLAUgAiBmo
      vq2PDw41oAGP3VXFexfOkDBNFublsyi/UK7+hRglASBmFMMwefGDk8QSBkvmF6DSk7T0h/A6
      nDywYKFM+BLiUyQAxIxypqWXg2dGtnm8f+1cPjh/FoDPlc0jL91ncXVCTC0SAGLGME3Fz986
      SiJpsnxBIWfCHUSTSYr9AW4vKbW6PCGmHAkAMWPUnm3ndHMPbqedmkU5nOzqxK7rPFBRhcsu
      e/sK8cckAMSMYJgmv3r/BKapWLIgn7qhDgBWFM1mbla2xdUJMTVJAIgZYf+pNs409+Jx2cku
      dtAbGcbvcnNPeYV0/ApxFRIAYtqLxZO8tOMkAMsW5tMW7wNgU/kCfC7Z4UuIq5EAENPex8ea
      ONsSxOOyk1agEU0mKcnIZEVRsdWlCTGlSQCIaW0oEue3O0eWfKiYn0lbpB+bpnFPeQV2XRZ7
      E+JaJADEtPb7A+dp7hrA63bgzgdDmVTlFVCenWN1aUJMeRIAYtoKDUZ5Y89ZNA3Kyn2EEmG8
      Dgd3ly+Qjl8hrsOUCAClFL29vTQ3N2MYxtjjwWCQ5uZmTNMEIBKJjH1uGAbDw8OW1Cumhh+9
      dpCuvmGys92orDgAD1fVUOjzW1yZENOD5QFgGAYvvPACO3bs4PDhw/zsZz/DMAyOHz/Oq6++
      ytGjR3nppZdQSvHOO+8QCoVQSrF9+3YaGhqsLl9Y5GxLkH2nWtF1jawSByaKeVk5VOcXWl2a
      ENOG5dMjNU3jwQcfxO8fuWr7xS9+QTgcZt++fTz55JM4nU5efPFFent7UUqhlOLo0aPY7Xaq
      qqosrl5YwTQV235/jIRhEshxYEtXANy/oBK7bvk1jRDThuUBoOs6gUCARCLBRx99RCAQwO12
      43A4cDqdaJpGfn4+oVAIgNraWhoaGnj66afHlvVNJBKXNB3F43HC4bAlr0fceqeaejl0th1N
      h4zZNhSKmrwCcpwu+b0LcQMsDwCAcDjMr371KxYsWMCGDRtQauSKTil12drtTqcT0zQvOeE7
      HA4co5t8KKVwOp14vd7JewFi0sQTBr/+sA6lIKPAjjtdx22380BllfzOhbhBlt8vm6bJyy+/
      zLp161i3bh02mw1d10kkEiQSCQA6OjrIzBzZw7W6upo777yT7du3j3UIi9Tx2q46Tjf14HBq
      5JSM3CHeXlJGtjfN6tKEmHYsvwOIx+OcP38en8/HqVOnsNvtbNy4kbVr1/L888+TnZ2Nw+Eg
      Kytr7G6goqKCjo4OduzYwcaNGy1+BWKynG3u5cUPR5Z8yC1xYXNClsfLujllFlcmxPSkqYvt
      LRZRSjE4OHjJY+np6WiaRigUIhKJkJ+fj81mIxqN4nQ60XUd0zSJRqOX3fYrpQgGg2RnywqQ
      M0kkluD/fvYDzrYEKcjzklWpY6LYWrOM5bLkgxA3xfI7AE3TxkYA/bHMzMyxph8At9s99rmu
      69LmmyKUUryys45zLUG8HgezK70MEqEkI5OaAhn2KcTNsrwPQIhrUUpxuqmXVz4+DRqUzfcx
      RASnzcYDCxbisMl6P0LcLAkAMaUlkiY/eGU/0XiSgoI0tMwkClg3Zy5lmVlWlyfEtCYBIKYs
      01Q8985Rmjr7cbttZM+1k1QGpRlZbCqff9kQYSHEjZEAEFPW8Qtd/G7vWQDyypwkbUnSnS4e
      qV4sSz0LMQEkAMSUNDAc44fbD5BImvhybXiyNWyaxucrq8hL91ldnhAzggSAmHKUUrzw3jFa
      uwdxuDXy57nQdI3lRcUsKZxldXlCzBgSAGLKOVDXxjv7z6PpUDDfhd2pUezPYHNFFbomf7JC
      TBR5N4kpJRpP8uwbh0gaJtklDrwZOi67nS2LavA6nFaXJ8SMIgEgpgylFG/vq6e9d4i0TBtZ
      RQ50TeO++ZUU+wNWlyfEjCMBIKaMeMLgrb3nsLs08sud6DaNRfkF3DZ7jgz5FOIWkAAQU0bt
      mXbaegfJn+vE6dHJ9nrZUrUYm2zyIsQtIe8sMSUkDZNX/1BHeraNtGwbDpuNLy1ags/lsro0
      IWYsCQAxJZxp7uV0Uw/Zsx3ousaKWcXMy5IVXYW4lSQAhOVMpXhj91m8GToevw2nzcbaklJp
      9xfiFpMAEJZr7R7gwJk2MmeNbOtZU1BIvsz2FeKWkwAQlnt3/3lwmqRl2tDQWD9nrlz9CzEJ
      JACEpfoGI3x4uIGsYgearlGdX0Ch78obBAkhJpYEgLDUjsONxLQE6Vk2dE1jfalc/QsxWSQA
      hGXiCYM395wlY5Yd3aZRmpnFnIzMz36iEGJCSAAIyxw6204oFsGXY0cDafsXYpJJAAhLGObI
      Ru+BAjs2u0ZRIIPK3DyryxIipUgACEucbe6lrq2HQL4dgDtL58mSD0JMMnnHCUucawuSOcuO
      bodZPj+VeXL1L8RkkwAQk84wTY6c7yBjlgNN01g7pwynzW51WUKkHAkAMekutIc429uN3aGR
      5fFSk19odUlCpCQJADGpTFPx5u6zONJGRvusLi7B43BYXJUQqUkCQEyqtp5Bas+34c+1k+50
      smb2HKtLEiJlSQCISdPVN8x3f7UL3W9id2qsmT1Hrv6FsJAEgJgUPf3/f3t3HhxFmT9+/N09
      0zOTSSaTyUkOjpAQyMFpEly5REFX3UVFBRVWXfxqWUu5WuvWWrVbZVnr/rTYtXat1VrXxXIP
      QSGgEDyQWxDQIHKJkStEQgg5SCbJ3Ff3749seglXgkxMIM+rij8yzEx/+pnu59PP008/j5f/
      9/Y2apvbSBhkxGI0iimfBaGPiQQg9LrmNi+///dWTja3MSjPhGKRGTMoA5vZ0tehCcKAJsbe
      Cb2qqdXDC//ZxqmWdrIKLfqCLyVZQ/o6NEEY8PpNC0BVVXw+X5fX3G43zc3NqKoKQDAYRNM0
      /f2BQOAHj1PouUanhz/85zPqnO0MHmPBYpOJVUz8bHwJg+0JfR2eIAx4fZ4ANE3jxIkTvPXW
      W3zyySf661VVVZSVlbFlyxbWrVuHpmls2rSJ1tZWNE1j8+bNHD58uA8jFy6l0enhxSWfcaqt
      jawiC2arTEJMDI9cV0pecoro+xeEfqDPEwBAQ0MDN998s14pqKrKZ599xpw5c5g9ezYtLS20
      trYSCARQVZWqqiqam5spKirq48iFCznT5uUPb2/jtKudwUUWzLEy8WYLjqqgZAAAHQ5JREFU
      D08oZYiY7lkQ+o0+vwcgSRKlpaU4nU79NVVVMRgMWK1WZFkmMzOTlpYWAI4fP87evXt58MEH
      kf87eVgoFCISieifDwaDeL3eH3ZHBACcLj+LllXQ4HWRVWTGaJJJMFuYWzgGh1ERv4sg9CN9
      ngAupLOfv7NFIMuyfh+grq4OSZJQzho/riiK/remaZhMJqxW6w8ctbD/WD1/W72btoiXwUUW
      DIpEZrydh8aXkBAT09fhCYJwjn7RBXQug8FAKBQiHA4D0NTUhN1uB2Dy5Mlcd911rF27Vk8U
      Qt9SVY2PPj/Ci0u245F9ZBZ0VP5Z8Qk8PEFU/oLQX/V5CyASibB3717a29s5deoUFRUVFBYW
      MmbMGFavXk1aWhqBQICUlP/dOBw3bhx1dXXs3r2bkpKSPt6Dgc3lDfCvT/bz6f5qHFlGHBkm
      fXnH+eOKsZnNfR2iIAgXIWl9fBmtqiq1tbV6H74kSaSnp2Mymfjuu+/wer3k5uZiNptxOp3Y
      bDaMRiOhUIiWlhbS0tK6fJ+mabS0tJCUlNQXuzNgaJpGfYubv763i6rGM6Tlmomxy8iSxNj0
      TO4uHI3FKKZ5EIT+rM8TQLSJBPDD2H+snr++t4uAEmBQnhmDUcJsNHJbXj4TBw9FFsM8BaHf
      6/MuIOHqoqoaa3YcZummAziGGMlINyNJEoPtCdxTNJZBcTYxxl8QrhIiAQg95g+GWfzBHnYc
      +Y6MIhPm2I4unx8NGcaP8/IxG8XhJAhXE3HGCj3iC4R49f1dfHPmNFn/HeIZazLxk5EFjM/I
      Elf9gnAVEglA6Fa7N8Dr5bs53FZP6vCOUT45iUncmT+aNJutr8MTBOF7EglAuCS3L8hr7++i
      OtBEyjATEhI3DB3GbXn5KAZDX4cnCMIVEAlAuKhWt58/l31Og+zEkWFEkiRm5uRx4/BcDHK/
      fIZQEITLIBKAcEGtbj+L3t2OU2nHnmbEKBu4fWQ+NwzNFkM8BeEaIRKAcJ7mdi9/XvE5TlM7
      8alGjAYDd4ws4AaxhKMgXFNEAhC6aGn38cflO3DHurEnKhgkibvyiyjJGiIqf0G4xogEIAAQ
      UVWqT7fyjw9347V7iUswosgyc8dMYPSg9L4OTxCEXiASwAClqhpNrR6OnWrhy0N1fPNdI65w
      gJRsBatdxmwwMn/8dYxISunrUAVB6CUiAQwgwVCEo7XN7Dlymv3HG2hod4NZxWqXsY0wkGAy
      I8sSVkVh7pjx5CWn9nXIgiD0IpEABoimVg//WrePA6dOE+OQiUmRSRtsxGD8X7++2WgkJzGZ
      6cNzxdKNgjAAiAQwAARDEf6x9ivqpRYyCv43P78sScSbLeSnpjHckcSQBAd2i0Xc7BWEAUIk
      gAHgnc1f02BowRpvIM5kJicpieGOJHKSkkmJjevr8ARB6CMiAVzDNE1j055qdp/5DmuiTKzJ
      xP8VX88gm5iyWRCEfromsBAdx061sObgQayJMiaDkbvyR5MeHy8qf0EQAJEArlnN7V7+te0r
      zCkdff03546gSIznFwThLCIBXIOCoQj/2ryHQLwfWZaYkDmYqcNyxBw+giB0IRLANUZVNVZs
      P0it1ozBKDE0wcFdBaPF7J2CIJxH1ArXmJ2VNXzVcgJTjExijJX544sxiXn7BUG4AJEAriFH
      a5t5/+DXGK1gVRTuHzueeLOlr8MSBKGfEsNArwHhiMrJxjb+s/MrjHYVo2zgzoLRDE1I7OvQ
      BEHox0QCuIp5/SEqvq1l67fVNIbaiE0x6CN+xg7K6OvwBEHo50QCuMoEwxEO15xhW+V3VJ6p
      x2QHxSFhk4wYJInSwUO5MTtXjPUXBKFb/TYBqKrKgQMHcLlcjBs3DpvNRl1dHcnJyZhMJlwu
      Fy6Xi4yMa/9KV1U16ppd7DleR0V1DR6DD8UqETeo4xZOjFFhmCOR4qzBFKYOEpW/IAg90i8T
      gKZpbN++HZ/PR2ZmJu+99x4PPfQQu3btYsqUKdjtdlavXs306dP7OtReEwiGqXe6+fpEAwfq
      6mgOuZEsGoYECTMyRlkmI95OceZgRianEm+xiHH+giBcln6bAI4dO8ZDDz2E0Wjk+PHjNDQ0
      6P+/fft2srOzycrK6sMoo0vTNILhCDWNbXxZVcvhM404Qx7McTKyRcJoAQmZlNhYitLSKUwb
      REa8XVT6giB8b/0yAUQiERRFwfDf8esOhwOXywXAmjVr0DSNhx9+uC9DjApN02h0ejha10x1
      SwtHzjThwofZKoMVYujY/ySrldGDMhiVnMrQBAeyeKhLEIQo6JcJoLMPW9M0JEkiFAqhKAoA
      U6dOZdOmTTQ3N5OaenWtWOULhDjZ1E5Ni5OqpmZqWp14CaBYO/ZXsnZ07ygGA0PsDnKTkilI
      TSM1ziau9AVBiLp+mQA6r/zb2tqIj4/n5MmTlJSUAJCQkMCsWbP44IMPmDdvHhZL/3rQKRAK
      4/EFcfmDOL0+mtrdNHu8nPF5ONnaiqZE0AwasixBLJiQ9YVZMuLjGZWSxqiUVGwms7jSFwSh
      V/XLBCBJEjNmzGDFihWYzWays7Ox2WxYrVYMBgNJSUmUlpayfft2ZsyY0auxaJpGQ6sbTyBE
      IBzGGwgRikQIqyrBSBhvMISKitPnw+n14Qr5CWphAuEwmqwhG/7XosEKEh2jdhIsMWTaExjm
      SCQr3k6CJQarydSr+yIIgnA2SdM0ra+DuJhwOEw4HL6sq3xN02hpaSEpKSkqMXxdW8+yA3sI
      qGEkmY4r9x6Q6JiG2SDLxJstJFljybInkO1IJCU2TozaEQShz/XLFkAno9GI0di3IZotBmQF
      DJH/VdaKbEAxdPwzGWQU2UCc2YwjxordbCEpNha7JYZ4s5kES4yYiVMQhH7pgi0An8/XZdjl
      1SYQCGA2m7t/Yw+5An4imobpv5W+hISeDiT0v8UDWIIgXE0umABUVSUcDvdFPFEViUSQZfmS
      FXM4HL5kK0NVVYCL3pBVVRVJkq5oG5qmoWnaJW/6dvcdPdmGqqr6DfYL+SHKq7ttdPf5nsTQ
      3b72tCwu9f89iaO7Y+OHKO+efEd35fFDbAOiUx7d/W4/VJ1wqf/vyTaiUSf05Fy84KdlWcZ0
      DdyQDIVCGAyGSxaipmmX3NdIJIKmaRct6HA4jCRJlzzoVFXtdhuqqupDXS9GUZSLHrjd7Yeq
      qvrzFRcTCARQFOWi5dV5UF5qO92VR3e/SXfl3bkvlyqLzguYi8XZk/IOBoPdljdwybIIhULI
      snzRsggGgxiNxis6Pnty/PXkGI9EIhd9T+fFYHcVVnfH36V+E+hZeVzqXOrpb9LbdUJ3v3tP
      t3GldUJ3x0YwGOzfN4GvFX6/v98NV72Q7hJAf+H3+zGbzf2+y60nFUF/0F0C6E+uhnPpavnd
      g8GgWBBGEARhoBItgB9A5xPN/V3nodDfYxVxRtfVEidcHefS1VKemqaJBCAIgjBQiS4gQRCE
      AUokAOGq0jkS6WrQ3+Ps7/F1EnFGz7nnT79+Eri/O3r0KMOHD7/su/1er5d9+/bR3NxMYWEh
      2dnZen9hdXU17e3tjBkzJmp9iCdPniQxMZHY2NjL+lwkEuHrr7/m5MmTZGRkMH78eCRJYt++
      fdTU1JCfn09eXl5UYgQ4ffo0hw8fBjqGtxUXF5/3QF8wGNQXBjpXOBzm4MGD1NTUYLPZKC0t
      vex97gmv18uuXbv0v8eMGUNiYuJ579u0adNF56pqaWnhyy+/RNM0iouLSU5Ojlp8kUiEzz77
      TP975MiRpKenX1Z8AM3NzZw8eZJx48YBHcdRZWUl4XCYMWPGkJWVdUXHaDTKETqOG6fTSUFB
      AdC1bK+77jpSUlK+d4wATqeT/fv3Ax39+tdddx1xcXGXFWdzczP79+/H7/dTWlpKYmIiR44c
      4dixY5jNZoqLi3E4HFcUZ319PYcOHQI6huwWFxefN2IqHA6zc+dOpk2bBogWwBX58ssvCYVC
      l/25DRs2EBcXx4QJE9iwYQNutxsAl8vF5s2b2bdvX1TjrKyspLW19bI/V1FRgdvtpqSkhJMn
      T3Lw4EF2795NU1MTU6ZM4YsvvqCmpiZqcVZVVWE0GsnJyWHYsGF6Yj37qiUSiVz0KXWPx0Mg
      EGDSpEmkpqZSXl7eK1dlLpeLU6dOkZOTQ05ODjExMefFCR0V04WoqkpZWRn5+fkUFhayYsWK
      qD54GQqFOHz4sB6fzWbT/68n8QF8/vnnlJeXs3fvXv21U6dOUVhYSHFxMeXl5fj9/iuKs729
      ndOnT+txWq1WPcaexKlpGhs3buSTTz7h4MGDwPllu3Llyisu2/r6etxuNzk5OQwfPlwfLtvT
      OL1eL5s2bWLYsGGMGjWK1atX4/P5aGlpYeLEieTk5LBy5UoikcgVxXn8+HFkWSYnJ4fs7Gz9
      OYWz41RVtcv5I1oAUXDs2DEqKipQVZVRo0ZRUlLCrl27qK+vp7W1FUVRuPfee/WHOu644w6M
      RiORSASr1ao/9LF582ZuvPFGdu7c2StxOp1O1q1bRzgcJjExkVtuuYXGxkZ27txJIBDA4/Fw
      77336ldhpaWleiWcnJxMKBTi+PHj3H777dhsNmbMmMFXX33FkCFDohZjSkoKgwcP1v8+fvw4
      O3fuRJIkpk6dSlJSEidOnGDp0qVEIhFuueUWBg0aBIDdbmfixIlomobX6+3Vcdh2u71LnK2t
      rXrZjho1igkTJuB2uykrK8Pj8VBSUkJhYaF+xawoin7Vbzabo56o4uLiusR35swZ1q9fj6qq
      jBs3jqKiIkKhECtXrsTtdlNQUEBJSYkeX1FREWPHjmXNmjX6d1x//fVAx1QxFoslKi3U+Pj4
      LnHW1NSwfft2IpEIkydPJjs7G5fLpZdjaWkpBQUF+rZLS0spLi5my5Yt+ncYjUaSkpKQJClq
      ZZuYmNglzsOHD7N7924AbrrpJtLT02lqamLZsmX4/X6mTp3K8OHDAYiJieGee+7BYDDg9/uR
      ZRlFUbjhhhuAjlbFpR7ouhxnnz+aprF3714qKyuRZZlbb72V2NhYampqeOeddwiFQiIBREN6
      ejr33HMP4XCYJUuWMH78eJqamsjLyyMvL48PPvgAp9OpL2BjNBpxu918+OGHDBkyBLvdzpEj
      RzCbzQwdOrTXEkBsbCw/+clPMBqNrFy5EqfTicfjISYmhrvvvpsDBw5w/PhxPQEYjUbC4TBb
      t26lubmZu+++m3A4zJYtWxg/fjw1NTW0t7dHNcajR4/i8XhQFIW8vDy2bdvGgw8+SCAQoLy8
      nNmzZ5OamsoDDzxAY2MjW7duZe7cufrnv/32W7Zu3YrP5+ORRx7ptaF4p0+fZs+ePQCMGjWK
      bdu2MXnyZNLT01m6dCn5+flYLBbuvPNOJEliyZIljBgxQn+AbfTo0bz++uvIskxJSUm3T3xe
      rqamJj2+4cOHs379em6//XZiY2N59913ycvLw2Aw6Bcj7777Lvn5+XprwWaznXeF73a7Wb16
      NbW1tdxyyy1RmW/r3HL89NNPmT17NoqisGzZMoYMGaKXI8CSJUvIzc3VyzE+Pp62tjb9+yRJ
      YsyYMfz973+PatmeOHFCT3qFhYXs2LGDefPm4fV6WbduHffffz/x8fHcc889+Hw+Vq5cqScA
      SZKQZZmGhgbWrFnD1KlTMZlM1NbWsnbtWpxOJw8++GBUHsA8evQoPp8PRVHIzs7mwIEDzJ8/
      n9OnT7Nz505mzpxJSkoK999/P01NTSIBXInOK4uqqiq++eYbbDYbgUBAb8qlpKQgyzIWi6XL
      VUhLSwvvvvsut956K7m5uYRCIT788EPGjh3Lzp07qa+v59tvv9X7NKMVp9PpZP369TgcDpxO
      J4FAAOi4ujEYDMTExHSp0DsTWm5uLvfee69+QlVWVnL06FGsVmvU+9gVRcFkMqEoCqFQiKam
      Jj744AOgoymtaRoxMTHIskxqaup5ldTIkSMZMmQIR44cYd26dcydO7dXkoDBYNC7AiRJoq6u
      ruPRekmira1Nn9ags5K02+0Eg0HMZjPhcJgDBw6wcOFCJEli+fLljBs37oL9ytGIDzpaAJs2
      bQI6ruB9Ph+yLOvdV6mpqXg8ni7dReeKjY1lzpw5NDY28vHHH5Obm0t8fHzU4gyFQjQ2NrJu
      3Tqg48n0cDiMoihdyjEUCl00+ZxbtmVlZVEpW6PRiMlkQpIkfbLMDz/8UG9tQkdLTlGUC05n
      cezYMTZs2MDcuXP1qeozMzOZP38+J06cYOPGjcybN++Kk1Xn+WM0GnG5XNTX17N69Wq9lwHQ
      z5+UlBSRAL4vv9+Pz+fDZDJRUVHBo48+SiQSYcmSJd1+9qOPPuLOO+/UF7WXZZm5c+fq8/V8
      8803V3zjqpOmaTQ2NmKz2di5cydTpkxh6NChrF69utvPbt++nby8PH70ox91WaazsLCQwsJC
      1q5dS35+flTi7DRs2DBGjhwJdFQISUlJzJo1C6PRSGtra5fKvLa2tkuF5XK5MBqNxMbGUlhY
      yJdfftntBGTfV2pqKkVFRfrfKSkpTJo0ibS0NNxut16xQsex0tbWpt+QCwaDXeaCMRgM+Hy+
      qCaAxMREPT5N00hISGDmzJnYbLbz4gsGg9TX11+yMo9EIrS2tpKYmEhmZibp6ek0NzdfcQI4
      uxw1TSMpKYnbbrtNvxg5u0L0+Xy0t7dfsuVxbtnKshyVss3MzNTjVFWV5ORkfvrTn6Ioynn3
      11pbW7skAL/fz8aNG/n5z3+ul7vf7ycYDBIfH09eXh4VFRX6lfuVGDZsmH5Oer1e0tLSuPvu
      u/ULk7PV1dWJBHC5OpvBoVCISZMmIUkSBQUFvP3221gsFr1pmpCQoN+EsdvtXX5Yv9/P5s2b
      9crstttu05NBOBxm6NChVzwqJBwO89FHH9He3k5WVhY2m42RI0eyYcMGbDYboVAIk8mEpmn6
      yRETE9PlRpTH46G6upqqqioAJkyYQGJiIhs2bECWZdLS0hgxYsQVxXk2m83WZdSC0Whk0qRJ
      vPPOO5hMJlJSUpg8eTKtra2UlZURCoW444479Pe7XC42bNiAoigEg0FuuOGGXpnXSFEUEhIS
      urw2bdo01q5di8lkQpZlZs2ahcVioaysDJ/Px4033qgfA1arlYKCApYsWYIkSQwePDiqo4Bk
      We6yIJIkScycOZNVq1ZhsViIiYnhxz/+MQ6Hg+XLlxMIBCgpKdFvwgJ610RLSwvLli2jpKSE
      /fv34/F4kGUZm812xfd+zi3Hzvs8nSsBOhwOZsyYgdls1stx+vTpejmqqkp5eTler5fW1laW
      L1/O9OnTo162Fouly4WGLMtcf/31LFu2DEVRyMjIYNq0aUQiEcrKyvD7/cycOVN/f2dLZuXK
      lUDHeTZlyhTWr1+PLMtEIhFGjBhxydZXT8TFxXVJ7DExMeTn57N06VIMBgMjRoxg7NixtLe3
      6+ePeBL4Mmma1jGJ0n9v5Jz9WmcTsb8IhUL67ImdcUVjoqpQKISmaVG7cdUdVVVRVRWj0ah3
      Z3VOhXvu9jVN02d8/KEn49I0rUtcmqbp0w9fKBH1ZJbNaMfXOV1yT+K70OfPjrm3fvvO3/v7
      xgk/TNl2XiydPVrtYsflhXQeq53nY2+V59lxnnf+iAQgCIIwMInnAARBEAYokQAEQRAGKJEA
      BEEQBiiRAARBEAYokQAEQRAGKJEABEEQBiiRAARBEAYo8SSwIAhXRFVVGhsbCYfD2O32K36i
      9dzvbmhoIBKJ4HA4emV9h4HM8Pzzzz/f10EIwkBWXV1NbW0tfr9fn1AsGjRNY+vWraxcuZJh
      w4Zhs9nw+XwcPnyYM2fOAB3TBVzsCVRVVQkEAt0+TRsIBHjmmWdobW3FarWSkJBAZWUlVVVV
      JCYmYjKZ9Dmujhw5QnJysv7aiRMn+Prrr4GOKVMAGhoa2LVrlz6Z3urVq1m1ahUGgyGqCxAJ
      iCeBBaGvLVy4kFAoRCgUIhKJ8Pzzz+tTCXeenj2dWuDs9zY0NPCLX/yCX/7yl/oqVkeOHGHh
      woWMHj2a6upqpk6dypNPPtllmo3O72hqamLRokW8/PLLF90GdEzS9vTTT/PGG28QCAR46qmn
      MJlMGAwG3G43f/vb3ygvL2fVqlVkZGQQDAZ5+eWXKSsr02cV3bNnDy+99BJJSUksXLiQCRMm
      sHv3bhYtWsTIkSN5//33MRgM+rTQQnSILiBB6GOyLPPEE08wYcIE3nnnHf7617/yyiuvsHnz
      ZtavX48kSTzwwAPIsszBgweZO3cuzc3NvPfeezz22GPIsozL5WLx4sVUV1czffp0Zs+ezauv
      vorH42Hbtm3k5OTok/5lZWXx5z//GY/Hw2OPPcauXbsYO3Ysb775Jt999x3Z2dk8+uij/POf
      /2TPnj38/ve/54477iArK4t//OMfOJ1O5s+fry8Reu6+PPPMM4wYMQK/38+sWbPw+XysWrWK
      5557jry8PObPn09VVRUTJ07kvvvuw2Qy8dJLL3Ho0CE8Hg/Tpk3jqaeeYtmyZZSXl/Ob3/ym
      L36WAUHcBBaEfuSmm26ivr4en89HTEwMjz32GJMmTeLVV18lIyODt99+G7fbzY4dO2hra9Mn
      R/v3v/+Nqqo8/fTTlJeXs2/fPm666SaSk5O57777uswO2slqtXLzzTdz8OBBVFVl7Nix/OpX
      v+LQoUPs2LGDG2+8EYfDwZw5c8jJyeGVV16hoKCAxx9/nBdffPGCSy0qisKIESOoq6vj2Wef
      ZcaMGYTDYTRN01duy83Npba2ltzcXKBjkZe9e/cyZcoUTp48qXfz5ObmcurUqd4qagHRAhCE
      fqVzURlZlnE6naxYsYJAIEB7ezsOh4OJEyeyceNGtm3bxiOPPKJ/7uDBgzzzzDPk5OQwefJk
      Dh06RHFxMVarlVGjRl10e36/n9jYWFRV5fPPP2fNmjU0NDTQ1tbGmDFjiImJ0T9/6NAhTCYT
      x48fx+Px4Ha7L7iQ+f79+3nxxReZNWsWc+bMwe/36zN6wv9monS73bzwwgtEIhFee+01UlJS
      UBRFTyyd7xN6j2gBCEI/EAgEaG1tZenSpRQVFRGJRHjjjTd49tlnefrpp/Upve+66y6WLl1K
      e3t7l4o9KSmJ6upqwuEwNTU1+rKeF6KqKh6Ph6NHj7JhwwYmTpzIp59+iqqqvPDCC0yZMgXo
      6Of3eDz4/X5UVcXhcDBhwgTmzJnDokWLLrjISiAQ4E9/+hMPP/wws2fPJhwO6yvHVVZW4na7
      qaysJDs7mxUrVqCqKs899xw2m02fF7+iooJgMEhFRUVU15sQzifSqyD0A3/4wx+wWCyMHTuW
      J598EkVRyMzM5Le//S0mk0lfzm/06NGYzWYmTZrUZWWsefPm8fzzz7N8+XJMJhNTp07l1KlT
      582fL0kSNTU1zJ8/H4vFwhNPPMHIkSMJBoO8+eab/PrXv8bpdHLfffdht9tJT09nwYIFPP74
      4yxYsIBXXnmFjz/+mFAoxOuvv37eftTX13Pq1CkWL17MW2+9BcDixYt59NFHWbRoEUajkalT
      p5KVlcXevXs5cuQICxYsAOCBBx5g5syZrF27lgULFqCqKn/5y196q8gFxCggQei3IpEI7e3t
      JCQk6AujnDhxgt/97nf88Y9/JDMzs8v7g8EgbW1tJCcnf6/FRVwuF4qidFmVTVVV2traiI+P
      x2AwEIlE8Hq9xMXF6ds4exTQpfj9fvx+/3mrqZ1L0zSam5tJTEzUE5gYBdQ7RBeQIPRTBoMB
      h8OhV7TBYJDFixfzs5/9jIyMjPPe37ls5vddWercJTmhY1SPw+HQV70yGAzYbLYu25AkCYPB
      wEsvvcQXX3xx0e+3WCzdVv6d35ecnKyv5/vaa6+xZcuW82ITrpxoAQiCcEU0TcPlcqGqKhaL
      JaoVtaqquFwuNE3DarXqi70L0SESgCAIwgAluoAEQRAGqP8P0iVjtUyReccAAAAASUVORK5C
      YII=
    </thumbnail>
  </thumbnails>
</workbook>
