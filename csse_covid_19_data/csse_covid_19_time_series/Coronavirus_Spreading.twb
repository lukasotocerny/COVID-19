<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0219.0753                               -->
<workbook original-version='18.1' source-build='2020.1.0 (20201.20.0219.0753)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-off' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='Confirmed' inline='true' name='federated.1xtym2y0zi7s521go06m41h8xmpw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='time_series_19-covid-Confirmed' name='textscan.1b514ac10w5pnm15fgt351i7wpkl'>
            <connection class='textscan' directory='/Users/lc/Documents/LUKI/PROGRAMMING/COVID-19/csse_covid_19_data/csse_covid_19_time_series' filename='time_series_19-covid-Confirmed-Processes.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1b514ac10w5pnm15fgt351i7wpkl' name='time_series_19-covid-Confirmed-Processes.csv' table='[time_series_19-covid-Confirmed-Processes#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=';'>
            <column datatype='string' name='Provice' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='real' name='Lat' ordinal='2' />
            <column datatype='real' name='Long' ordinal='3' />
            <column datatype='date' name='Date' ordinal='4' />
            <column datatype='integer' name='Confirmed' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[time_series_19-covid-Confirmed-Processes.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Provice</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Provice]</local-name>
            <parent-name>[time_series_19-covid-Confirmed-Processes.csv]</parent-name>
            <remote-alias>Provice</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[time_series_19-covid-Confirmed-Processes.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lat]</local-name>
            <parent-name>[time_series_19-covid-Confirmed-Processes.csv]</parent-name>
            <remote-alias>Lat</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Long]</local-name>
            <parent-name>[time_series_19-covid-Confirmed-Processes.csv]</parent-name>
            <remote-alias>Long</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[time_series_19-covid-Confirmed-Processes.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[time_series_19-covid-Confirmed-Processes.csv]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Actively sick' datatype='integer' name='[Calculation_3977241447766900736]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Confirmed])-SUM([federated.09f47p51bf2go81c4564w1f8wuwu].[Recovered])-SUM([federated.1oe3v721r14lwr14tqo6p102ni0y].[Deaths])' />
      </column>
      <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3977241447766900736]' derivation='User' name='[usr:Calculation_3977241447766900736:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='Country/Region, Province/State' />
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.440079' measure-ordering='alphabetic' measure-percentage='0.559921' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1xtym2y0zi7s521go06m41h8xmpw].[sum:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1xtym2y0zi7s521go06m41h8xmpw].[usr:Calculation_3977241447766900736:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.09f47p51bf2go81c4564w1f8wuwu].[sum:Recovered:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1oe3v721r14lwr14tqo6p102ni0y].[sum:Deaths:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='federated.09f47p51bf2go81c4564w1f8wuwu'>
        <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1oe3v721r14lwr14tqo6p102ni0y'>
        <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
      </datasource-dependencies>
    </datasource>
    <datasource caption='Deaths' inline='true' name='federated.1oe3v721r14lwr14tqo6p102ni0y' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='time_series_19-covid-Deaths-Processes' name='textscan.1atakh71e85xhf13i3k0l1mgupi3'>
            <connection class='textscan' directory='/Users/lc/Documents/LUKI/PROGRAMMING/COVID-19/csse_covid_19_data/csse_covid_19_time_series' filename='time_series_19-covid-Deaths-Processes.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1atakh71e85xhf13i3k0l1mgupi3' name='time_series_19-covid-Deaths-Processes.csv' table='[time_series_19-covid-Deaths-Processes#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=';'>
            <column datatype='string' name='Provice' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='real' name='Lat' ordinal='2' />
            <column datatype='real' name='Long' ordinal='3' />
            <column datatype='date' name='Date' ordinal='4' />
            <column datatype='integer' name='Deaths' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[time_series_19-covid-Deaths-Processes.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Provice</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Provice]</local-name>
            <parent-name>[time_series_19-covid-Deaths-Processes.csv]</parent-name>
            <remote-alias>Provice</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[time_series_19-covid-Deaths-Processes.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lat]</local-name>
            <parent-name>[time_series_19-covid-Deaths-Processes.csv]</parent-name>
            <remote-alias>Lat</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Long]</local-name>
            <parent-name>[time_series_19-covid-Deaths-Processes.csv]</parent-name>
            <remote-alias>Long</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[time_series_19-covid-Deaths-Processes.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[time_series_19-covid-Deaths-Processes.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.438114' measure-ordering='alphabetic' measure-percentage='0.561886' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Recovered' inline='true' name='federated.09f47p51bf2go81c4564w1f8wuwu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='time_series_19-covid-Recovered-Processes' name='textscan.1s498e51l0ca741dczozz0wmpn1x'>
            <connection class='textscan' directory='/Users/lc/Documents/LUKI/PROGRAMMING/COVID-19/csse_covid_19_data/csse_covid_19_time_series' filename='time_series_19-covid-Recovered-Processes.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1s498e51l0ca741dczozz0wmpn1x' name='time_series_19-covid-Recovered-Processes.csv' table='[time_series_19-covid-Recovered-Processes#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=';'>
            <column datatype='string' name='Provice' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='real' name='Lat' ordinal='2' />
            <column datatype='real' name='Long' ordinal='3' />
            <column datatype='date' name='Date' ordinal='4' />
            <column datatype='integer' name='Recovered' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[time_series_19-covid-Recovered-Processes.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Provice</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Provice]</local-name>
            <parent-name>[time_series_19-covid-Recovered-Processes.csv]</parent-name>
            <remote-alias>Provice</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[time_series_19-covid-Recovered-Processes.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lat]</local-name>
            <parent-name>[time_series_19-covid-Recovered-Processes.csv]</parent-name>
            <remote-alias>Lat</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Long]</local-name>
            <parent-name>[time_series_19-covid-Recovered-Processes.csv]</parent-name>
            <remote-alias>Long</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[time_series_19-covid-Recovered-Processes.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Recovered]</local-name>
            <parent-name>[time_series_19-covid-Recovered-Processes.csv]</parent-name>
            <remote-alias>Recovered</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.438114' measure-ordering='alphabetic' measure-percentage='0.561886' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Confirmed and sick' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Confirmed and sick' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Confirmed and sick'>
      <table>
        <view>
          <datasources>
            <datasource caption='Confirmed' name='federated.1xtym2y0zi7s521go06m41h8xmpw' />
            <datasource caption='Deaths' name='federated.1oe3v721r14lwr14tqo6p102ni0y' />
            <datasource caption='Recovered' name='federated.09f47p51bf2go81c4564w1f8wuwu' />
          </datasources>
          <datasource-dependencies datasource='federated.09f47p51bf2go81c4564w1f8wuwu'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Provice]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1oe3v721r14lwr14tqo6p102ni0y'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[Provice]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1xtym2y0zi7s521go06m41h8xmpw'>
            <column caption='Actively sick' datatype='integer' name='[Calculation_3977241447766900736]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Confirmed])-SUM([federated.09f47p51bf2go81c4564w1f8wuwu].[Recovered])-SUM([federated.1oe3v721r14lwr14tqo6p102ni0y].[Deaths])' />
            </column>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3977241447766900736]' derivation='User' name='[usr:Calculation_3977241447766900736:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xtym2y0zi7s521go06m41h8xmpw].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mainland China&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1xtym2y0zi7s521go06m41h8xmpw].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1xtym2y0zi7s521go06m41h8xmpw].[usr:Calculation_3977241447766900736:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1xtym2y0zi7s521go06m41h8xmpw].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1xtym2y0zi7s521go06m41h8xmpw].[sum:Confirmed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1xtym2y0zi7s521go06m41h8xmpw].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1xtym2y0zi7s521go06m41h8xmpw].[usr:Calculation_3977241447766900736:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1xtym2y0zi7s521go06m41h8xmpw].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1xtym2y0zi7s521go06m41h8xmpw].[sum:Confirmed:qk] + [federated.1xtym2y0zi7s521go06m41h8xmpw].[usr:Calculation_3977241447766900736:qk])</rows>
        <cols>[federated.1xtym2y0zi7s521go06m41h8xmpw].[tdy:Date:qk]</cols>
        <join-lod-include-overrides>
          <column>[federated.09f47p51bf2go81c4564w1f8wuwu].[Country]</column>
          <column>[federated.09f47p51bf2go81c4564w1f8wuwu].[Provice]</column>
          <column>[federated.1oe3v721r14lwr14tqo6p102ni0y].[Country]</column>
          <column>[federated.1oe3v721r14lwr14tqo6p102ni0y].[Provice]</column>
        </join-lod-include-overrides>
      </table>
      <simple-id uuid='{EC50EBE3-A996-4919-AB35-852C229C1B8A}' />
    </worksheet>
  </worksheets>
  <windows source-height='72'>
    <window class='worksheet' maximized='true' name='Confirmed and sick'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1xtym2y0zi7s521go06m41h8xmpw].[none:Country:nk]' type='filter' />
            <card pane-specification-id='5' param='[federated.1xtym2y0zi7s521go06m41h8xmpw].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xtym2y0zi7s521go06m41h8xmpw].[none:Country:nk]</field>
            <field>[federated.1xtym2y0zi7s521go06m41h8xmpw].[tdy:Date:ok]</field>
            <field>[federated.1xtym2y0zi7s521go06m41h8xmpw].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ABBD2580-AFD8-4ABB-B715-421C975869E2}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Confirmed and sick' width='384'>
      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
      A6uulInybPCeAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
